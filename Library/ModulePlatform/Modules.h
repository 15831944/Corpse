#pragma once

#define STRING_MODULE_ID(x) \
	((x) == CORE_MODULE) ? "CORE_MODULE" : \
	((x) == COMMAND_MODULE) ? "COMMAND_MODULE" : \
	((x) == UI_MODULE) ? "UI_MODULE" : \
	((x) == EVENT_MODULE) ? "EVENT_MODULE" : \
	((x) == CONFIG_MODULE) ? "CONFIG_MODULE" : \
	((x) == SCAN_MODULE) ? "SCAN_MODULE" : \
	((x) == LOG_MODULE) ? "LOG_MODULE" : \
	((x) == PHISON_MODULE) ? "PHISON_MODULE" : \
	((x) == STORAGE_MODULE) ? "STORAGE_MODULE" : \
	((x) == LED_MODULE) ? "LED_MODULE" : \
	((x) == UPDATE_MODULE) ? "UPDATE_MODULE" : \
	((x) == MP_HANDLER_MODULE) ? "MP_HANDLER_MODULE" : \
	((x) == LICENSE_MODULE) ? "LICENSE_MODULE" : \
	((x) == PATCH_AGENT_MODULE) ? "PATCH_AGENT_MODULE" : \
	((x) == STAGENT_MODULE) ? "PCAGENT_MODULE" : \
	((x) == MPCORE_MODULE) ? "MPCORE_MODULE" : "UNKNOWN_MODULE("#x")"

typedef UINT CommandType;

typedef enum tagModuleIDType
{
	MODULE_TYPE_UNKNOW = 0,
	CORE_MODULE = 0,
	COMMAND_MODULE = 1,
	UI_MODULE = 2,
	EVENT_MODULE = 3,
	CONFIG_MODULE = 101,
	SCAN_MODULE = 102,
	LOG_MODULE = 103,
	PHISON_MODULE = 104,
	STORAGE_MODULE = 105,
	LED_MODULE = 106,
	UPDATE_MODULE = 107,
	MP_HANDLER_MODULE = 108,
	LICENSE_MODULE = 109,
	PATCH_AGENT_MODULE = 110,
	STAGENT_MODULE = 111,
	MPCORE_MODULE = 112
}MODULE_TYPE;
